;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name clojure-cup-2015.expression, :imports nil, :requires {test cljs.test, cljs.test cljs.test, string clojure.string, clojure.string clojure.string, reader cljs.tools.reader, cljs.tools.reader cljs.tools.reader, rt cljs.tools.reader.reader-types, cljs.tools.reader.reader-types cljs.tools.reader.reader-types}, :uses nil, :defs {try-read {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 19, :column 8, :end-line 19, :end-column 16, :private true, :arglists (quote ([rdr feature]))}, :private true, :name clojure-cup-2015.expression/try-read, :variadic false, :file "src/clojure_cup_2015/expression.cljs", :end-column 16, :method-params ([rdr feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr feature]))}, is-non-clojure? {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 50, :column 7, :end-line 50, :end-column 22, :arglists (quote ([s]))}, :name clojure-cup-2015.expression/is-non-clojure?, :variadic false, :file "src/clojure_cup_2015/expression.cljs", :end-column 22, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, prep-code {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 84, :column 7, :end-line 84, :end-column 16, :arglists (quote ([code meta]))}, :name clojure-cup-2015.expression/prep-code, :variadic false, :file "src/clojure_cup_2015/expression.cljs", :end-column 16, :method-params ([code meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 2, :fn-var true, :arglists (quote ([code meta]))}, find-form {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([forms pos]))}, :name clojure-cup-2015.expression/find-form, :variadic false, :file "src/clojure_cup_2015/expression.cljs", :end-column 16, :method-params ([forms pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([forms pos]))}, ->ns-sym {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 54, :column 7, :end-line 54, :end-column 15, :arglists (quote ([nsp]))}, :name clojure-cup-2015.expression/->ns-sym, :variadic false, :file "src/clojure_cup_2015/expression.cljs", :end-column 15, :method-params ([nsp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([nsp]))}, truncate {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 82, :column 7, :end-line 82, :end-column 15, :arglists (quote ([v]))}, :name clojure-cup-2015.expression/truncate, :variadic false, :file "src/clojure_cup_2015/expression.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, meta? {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 61, :column 7, :end-line 61, :end-column 12, :arglists (quote ([thing]))}, :name clojure-cup-2015.expression/meta?, :variadic false, :file "src/clojure_cup_2015/expression.cljs", :end-column 12, :method-params ([thing]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([thing]))}, lined-read {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 24, :column 7, :end-line 24, :end-column 17, :arglists (quote ([string] [string feature])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([string] [string feature]), :arglists ([string] [string feature]), :arglists-meta (nil nil)}}, :name clojure-cup-2015.expression/lined-read, :variadic false, :file "src/clojure_cup_2015/expression.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([string] [string feature]), :arglists ([string] [string feature]), :arglists-meta (nil nil)}, :method-params ([string] [string feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists ([string] [string feature])}, trim-last {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 57, :column 7, :end-line 57, :end-column 16, :arglists (quote ([s n]))}, :name clojure-cup-2015.expression/trim-last, :variadic false, :file "src/clojure_cup_2015/expression.cljs", :end-column 16, :method-params ([s n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s n]))}, clear-scheme-booleans {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 91, :column 7, :end-line 91, :end-column 28, :arglists (quote ([code]))}, :name clojure-cup-2015.expression/clear-scheme-booleans, :variadic false, :file "src/clojure_cup_2015/expression.cljs", :end-column 28, :method-params ([code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([code]))}, clean-serialize {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 65, :column 7, :end-line 65, :end-column 22, :arglists (quote ([res & [opts]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(res [opts])], :arglists ([res & [opts]]), :arglists-meta (nil)}}, :name clojure-cup-2015.expression/clean-serialize, :variadic true, :file "src/clojure_cup_2015/expression.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(res [opts])], :arglists ([res & [opts]]), :arglists-meta (nil)}, :method-params [(res [opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists ([res & [opts]])}, handle {:protocol-inline nil, :meta {:file "/home/ibtissem/workspace/clojurecup/clojure-cup-2015/web_repl/clojure-cup-2015/src/clojure_cup_2015/expression.cljs", :line 98, :column 7, :end-line 98, :end-column 13, :arglists (quote ([msg meta pos]))}, :name clojure-cup-2015.expression/handle, :variadic false, :file "src/clojure_cup_2015/expression.cljs", :end-column 13, :method-params ([msg meta pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 3, :fn-var true, :arglists (quote ([msg meta pos]))}}, :require-macros {test cljs.test, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:features feature :else :clojure-cup-2015.expression/EOF :end-column :start fn :read-cond :ch :allow :column :allow-var? :line :result :print-length :syntax :end-line :eof :verbatim :clj :cljs :forms}, :order [:clj :cljs feature :read-cond :features :eof :allow :clojure-cup-2015.expression/EOF :line :ch :end-line :column :end-column :else :print-length fn :allow-var? :result :verbatim :start :syntax :forms]}, :doc nil}